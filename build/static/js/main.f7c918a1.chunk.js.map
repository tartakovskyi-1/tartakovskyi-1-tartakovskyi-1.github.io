{"version":3,"sources":["components/PrevRequestsItem.js","components/PrevRequests.js","components/Search.js","components/Repository.js","components/ReposList.js","api.js","components/App.js","index.js"],"names":["PrevRequestsItem","term","setTerm","useContext","AppContext","onClick","PrevRequests","terms","className","map","index","Search","handleChange","useState","prevRequests","setPrevRequests","focus","setFocus","useEffect","length","localStorage","setItem","JSON","stringify","getItem","parse","htmlFor","type","name","autoComplete","id","value","onChange","onFocus","onBlur","includes","slice","Repository","repository","description","html_url","language","created_at","owner","forks","watchers","dropped","toggleDropped","login","href","target","e","ReposList","repos","searchRepos","a","url","response","axios","get","React","createContext","App","setRepos","then","data","catch","error","console","log","Provider","aria-current","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7c918a1.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {AppContext} from \"./App\";\r\n\r\nconst PrevRequestsItem = ({ term }) => {\r\n\r\n  const { setTerm } = useContext(AppContext);\r\n\r\n  const onClick = () => setTerm(term);\r\n\r\n  return (\r\n    <li onClick={onClick}>{term}</li>\r\n  )\r\n}\r\n\r\nPrevRequestsItem.propTypes = {\r\n  term: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default PrevRequestsItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PrevRequestsItem from './PrevRequestsItem';\r\n\r\n\r\nconst PrevRequests = ({ terms }) => {\r\n\r\n  return (\r\n    <div className=\"prevRequests\">\r\n      <ul>\r\n        {terms.map((term,index) => (\r\n          <PrevRequestsItem key={index} term={term} />\r\n        )\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nPrevRequests.propTypes = {\r\n  terms: PropTypes.array,\r\n}\r\n\r\nexport default PrevRequests;\r\n","import React, { useState, useEffect }  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PrevRequests from './PrevRequests';\r\n\r\nconst Search = ({ term, handleChange }) => {\r\n\r\n  const [prevRequests, setPrevRequests] = useState([]);\r\n  const [focus, setFocus] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    if (prevRequests.length) {\r\n      localStorage.setItem('prevRequests', JSON.stringify(prevRequests));\r\n    } else if (localStorage.getItem('prevRequests')) {\r\n      setPrevRequests(JSON.parse(localStorage.getItem('prevRequests')));\r\n    }\r\n  },[prevRequests])\r\n\r\n  const updateRequestsArchive = () => {\r\n    if (term && !prevRequests.includes(term)) {\r\n      setPrevRequests([term,...prevRequests.slice(0,4)]);\r\n      setFocus(false);\r\n    }\r\n  }\r\n\r\n  const onFocus = () => setFocus(true);\r\n\r\n  return (\r\n    <div className=\"form-group search\">\r\n      <label htmlFor=\"search\">Search:</label>\r\n      <input \r\n        type=\"text\" \r\n        name=\"term\"\r\n        autoComplete=\"off\" \r\n        id=\"search\"\r\n        className=\"form-control pos-relative\"\r\n        value={term} \r\n        onChange={handleChange} \r\n        onFocus={onFocus}\r\n        onBlur={updateRequestsArchive}\r\n      />\r\n      {focus && prevRequests.length > 0 && <PrevRequests terms={prevRequests} /> }\r\n    </div>\r\n  )\r\n}\r\n\r\nSearch.propTypes = {\r\n  term: PropTypes.string,\r\n  handleChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState }  from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Repository = ({ repository }) => {\r\n\r\n\tconst {id, name, description, html_url, language, created_at, owner, forks, watchers} = repository;\r\n\r\n\tconst [dropped, toggleDropped] = useState(-1);\r\n\r\n\tconst handleClick = e => toggleDropped(dropped * (-1))\r\n\r\n\treturn (\r\n\t\t<li key={id} className=\"repository\">\r\n\t\t\t<h3 className=\"repository__name\">{name}</h3>\r\n\t\t\t<div className=\"repository__property\">\r\n\t\t\t\t<span>Language:</span>\r\n\t\t\t\t<b>{language}</b>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"repository__property\">\r\n\t\t\t\t<span>Description:</span>\r\n\t\t\t\t<b>{description}</b>\r\n\t\t\t</div>\r\n\t\t\t{dropped === 1 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"repository__property\">\r\n\t\t\t\t\t\t<span>Owner:</span>\r\n\t\t\t\t\t\t<b>{owner.login}</b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"repository__property\">\r\n\t\t\t\t\t\t<span>Url:</span>\r\n\t\t\t\t\t\t<b><a href={html_url} target=\"_blank\">{html_url}</a></b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"repository__property\">\r\n\t\t\t\t\t\t<span>Created at:</span>\r\n\t\t\t\t\t\t<b>{created_at}</b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"repository__property\">\r\n\t\t\t\t\t\t<span>Forks:</span>\r\n\t\t\t\t\t\t<b>{forks}</b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"repository__property\">\r\n\t\t\t\t\t\t<span>Watchers:</span>\r\n\t\t\t\t\t\t<b>{watchers}</b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t<a href=\"/#\" onClick={handleClick}>{ dropped === -1 ? 'Show more' : 'Hide' }</a>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nRepository.propTypes = {\r\n  repository: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Repository;\r\n","import React  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Repository from './Repository';\r\n\r\nconst ReposList = ({ repos }) => {\r\n\r\n\r\n\treturn (\r\n\t\t<ul className=\"repository-list\">\r\n\t\t{repos.map((repository) => \r\n\t\t\t<Repository key={repository.id} repository={repository} />\r\n\t\t\t)}\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\nReposList.propTypes = {\r\n  repos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ReposList;\r\n","import axios from 'axios';\r\n\r\nexport const searchRepos = async term => {\r\n    const url =`https://api.github.com/users/${term}/repos`;\r\n    const response = axios.get(url);\r\n\r\n    return response; \r\n }\r\n\r\n\r\n","import React, { useState, useEffect }  from 'react';\r\nimport Search from './Search';\r\nimport ReposList from './ReposList';\r\nimport { searchRepos } from '../api';\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst App = () => {\r\n\r\n  const [repos, setRepos] = useState([]);\r\n  const [term, setTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (term) {\r\n      searchRepos(term)\r\n      .then(response => {\r\n        setRepos(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        setRepos([]);\r\n      })\r\n    } else {\r\n      setRepos([]);\r\n    }\r\n  },[term]);\r\n\r\n  const updateTerm = ({ target }) => {\r\n    setTerm(target.value);\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider value={{ setTerm: setTerm }} >\r\n      <nav className=\"navbar navbar-expand-md navbar-light bg-white shadow-sm\">\r\n        <div className=\"container\">\r\n          <a aria-current=\"page\" className=\"navbar-brand active\" href=\"/\">Github Search App</a>\r\n        </div>\r\n      </nav>\r\n      <main>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-between\">\r\n          <div className=\"col-md-3 mb-4\">\r\n            <Search term={term} handleChange={updateTerm} />          \r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <h1>Found repositories</h1>\r\n            {repos.length > 0 ? <ReposList repos={repos} /> : <p>No repositories found</p>}         \r\n          </div>\r\n        </div>\r\n      </div>\r\n      </main>\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './scss/app.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}